name: Docker Build/Publish Image
on:
  workflow_call:
    inputs:
      DOCKER_TARGET_PLATFORM:
        type: string
        description: Arch
        required: true
      DOCKERFILE:
        type: string
        description: Dockerfile path
        required: false
        default: "Dockerfile"
      DOCKER_REGISTRY:
        type: string
        description: Docker registry
        required: false
        default: "ghcr.io"
      DOCKER_IMAGE:
        type: string
        description: Docker image
        required: false
        default: ${{ github.repository }}
      DOCKER_USERNAME:
        type: string
        description: Docker username
        required: false
        default: ${{ github.actor }}
    secrets:
      DOCKER_PASSWORD:
        description: Docker password
        required: false
jobs:
  build:
    runs-on: self-hosted
    env:
      DOCKER_REGISTRY: ${{ inputs.DOCKER_REGISTRY }}
      DOCKER_IMAGE: ${{ inputs.DOCKER_IMAGE }}
      DOCKER_USERNAME: ${{ inputs.DOCKER_USERNAME }}
      DOCKER_TARGET_PLATFORM: ${{ inputs.DOCKER_TARGET_PLATFORM }}
      DOCKER_DEFAULT_PASS: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set DOCKER_PASSWORD
        id: docker_password
        run: |
          if [[ -z "${{ secrets.DOCKER_PASSWORD }}" ]]; then
            echo "::set-output name=password::${DOCKER_DEFAULT_PASS}"
          else
            echo "::set-output name=password::${{ secrets.DOCKER_PASSWORD }}"
          fi
      - name: Checkout the code
        uses: actions/checkout@v1
      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}
      - name: Lowercase
        id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ steps.prepare.outputs.docker_image }}
      - name: Docker Login
        if: success()
        run: |
          echo "${{ steps.docker_password.outputs.password }}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
      - name: Run Buildx (push image)
        if: success()
        run: |
          docker build --tag ${{ steps.string.outputs.lowercase}}:${{ steps.prepare.outputs.version }}  --file ${{ inputs.DOCKERFILE }} --output type=image,push=true .
