name: Terraform Deploy
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
        description: ENVIRONMENT
        required: true
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
jobs:
  deploy-terraform:
    name: 'Terraform Deploy'
    runs-on: ubuntu-20.4
    environment:  ${{ inputs.ENVIRONMENT }}
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      TerraformBackendStorageAccount: "terraformstoragekarnod"
      TerraformBackendResourceGroup: "terraform"
      TerraformBackendStorageContainer: "state"           
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: deploy-zip
        path: ./deploy.zip
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      run: terraform -chdir=terraform init -backend-config=storage_account_name=$TerraformBackendStorageAccount -backend-config=container_name=$TerraformBackendStorageContainer -backend-config=key=dev.tfstate -backend-config=resource_group_name=$TerraformBackendResourceGroup -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" -backend-config=tenant_id="$ARM_TENANT_ID" -backend-config=client_id="$ARM_CLIENT_ID" -backend-config=client_secret="$ARM_CLIENT_SECRET"
    - name: Terraform Plan
      run: terraform -chdir=terraform plan -out=plan.tfplan -input=false
    - name: Terraform Apply
      if: ${{ inputs.TFAction == 'apply'}}  
      run: terraform -chdir=terraform apply -input=false -auto-approve plan.tfplan
    - name: Terraform Destroy
      if: ${{ inputs.TFAction == 'destroy' }} 
      run: terraform -chdir=terraform destroy -input=false -auto-approve